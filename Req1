//Req1: Create a field on Account named "Number of Contacts". Populate this field with the number of contacts related to an account. 
// Create Apex trigger No_ContactsOnAccount.apxt
trigger No_ContactsOnAccount on Contact (After insert, After update, After Delete, After undelete) {
     
    Set<Id> accountIds = new Set<Id>();

    // If contacts are inserted, updated or undeleted to find the related Account IDs
    if (Trigger.isInsert || Trigger.isUpdate || Trigger.isUndelete) {
        for (Contact contact : Trigger.new) {
            accountIds.add(contact.AccountId);
        }
    }
 // If contacts are deleted to find the related Account IDs
    if (Trigger.isDelete) {
        for (Contact contact : Trigger.old) {
            accountIds.add(contact.AccountId);
        }
    }

       Map<Id, Integer> contactCount_Map = new Map<Id, Integer>(); // to hold account and its count of contacts associated

    // To get count of contacts for each related Account
    for (AggregateResult ar : [
        SELECT AccountId, COUNT(Id) contact_Count
        FROM Contact
        WHERE AccountId IN :accountIds
        GROUP BY AccountId
    ]) {
        Id accountId = (Id)ar.get('AccountId');
  
        Integer contact_Count = (Integer)ar.get('contact_Count');

        contactCount_Map.put(accountId, contact_Count);
    }

    // To update the Account records with the count of related contacts
    List<Account> accountsToUpdate = new List<Account>();
    for (Account acc : [SELECT Id, Number_of_Contacts__c FROM Account WHERE Id IN :accountIds]) {
        
        Integer count = contactCount_Map.get(acc.Id);
        acc.Number_of_Contacts__c = count;
        accountsToUpdate.add(acc);
    }

    // Update the Account records
    if (!accountsToUpdate.isEmpty()) {
        update accountsToUpdate;
    }
}
